version '0.0.0.0.1-SKUNKWORKS'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath group: 'org.saul', name: 'one-call-saul', version: '1.1'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'org.saul.one-call-saul'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

println 'SaulDto : ******************************'
println 'SaulDto : ******************************'
println "SaulDto : *** : ${buildDir} : ***"
println 'SaulDto : ******************************'
println 'SaulDto : ******************************'

dependencies {
    compile group: 'org.saul', name: 'one-call-saul', version: '1.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.3'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.7.3'

    compile group: 'org.springframework', name: 'spring-context', version: '4.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '4.2.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.3.3.RELEASE'

    compile group: 'com.h2database', name: 'h2', version: '1.4.191'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '1.3.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.3.3.RELEASE'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main {
        java {
            srcDir 'build/generated-sources/src/main/java/'
        }
        resources {
            srcDir 'build/generated-sources/src/main/resources/'
        }
    }
}


install {
    repositories.mavenInstaller {
        pom.version = '1.1'
        pom.groupId = 'org.saul'
        pom.artifactId = 'saul-demo'
    }
}


test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true

        // Or we use events method:
        // events 'standard_out', 'standard_error'

        // Or set property events:
        // events = ['standard_out', 'standard_error']

        // Instead of string values we can
        // use enum values:
        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}
